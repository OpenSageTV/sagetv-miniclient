apply plugin: 'com.android.application'


def computeVersionCode()
{
    return appVersionCode;
}

def Properties signingProps = new Properties()
def propFile = file("../keystore.properties")

if (propFile.canRead())
{
    signingProps.load(new FileInputStream(propFile))
}
else
{
    System.out.println("Keystore properties file missing.")
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    android {
    compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }


    defaultConfig {
        applicationId "jvl.sage.miniclient.android.tv.debug"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        // versionCode API (2 digits), SCREEN (2 digits), VERSION (3 digits)
        versionCode computeVersionCode()
        versionName "${appVersionName}"
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','armeabi','x86','x86_64'
    }

    signingConfigs
    {
        release
        {
            keyAlias = "client"

            if (signingProps!=null && signingProps.containsKey("keyAlias") && signingProps.containsKey("storeFile")
                    && signingProps.containsKey("storePassword") && signingProps.containsKey("keyPassword"))
            {
                keyAlias = signingProps.getProperty("keyAlias")
                storeFile = new File(signingProps.getProperty("storeFile"));
                storePassword = signingProps.getProperty("storePassword")
                keyPassword = signingProps.getProperty("keyPassword")

                System.out.println("signing config setup from properties file")
            }
            else
            {
                System.out.println("signing config missing or incorrectly configured")
            }
        }
        debug
        {
            keyAlias = "client"

            if (signingProps!=null && signingProps.containsKey("keyAlias") && signingProps.containsKey("storeFile")
                    && signingProps.containsKey("storePassword") && signingProps.containsKey("keyPassword"))
            {
                keyAlias = signingProps.getProperty("keyAlias")
                storeFile = new File(signingProps.getProperty("storeFile"));
                storePassword = signingProps.getProperty("storePassword")
                keyPassword = signingProps.getProperty("keyPassword")

                System.out.println("signing config setup from properties file")
            }
            else
            {
                System.out.println("signing config missing or incorrectly configured")
            }
        }
    }

    buildTypes
    {
        release
        {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug
        {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


    /*
    if (System.getenv("AEA_STORE_FILE") && System.getenv("AEA_STORE_PASSWORD") && System.getenv("AEA_MINICLIENT_KEY_PASSWORD"))
    {
        signingConfigs.release.storeFile = file(System.getenv("AEA_STORE_FILE"))
        signingConfigs.release.storePassword = System.getenv("AEA_STORE_PASSWORD")
        signingConfigs.release.keyPassword = System.getenv("AEA_MINICLIENT_KEY_PASSWORD")
    }
    else
    {
        System.out.println("NEED TO SET AEA_STORE_FILE, AEA_STORE_PASSWORD, AEA_MINICLIENT_KEY_PASSWORD to sign app");
        buildTypes.release.signingConfig = null
    }
     */

//    dataBinding {
//        enabled = true
//    }
}



dependencies {
    api project(":android-shared")
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "com.android.support:recyclerview-v7:${androidExtrasVer}"
    api "com.android.support:leanback-v17:${androidExtrasVer}"
    api "com.android.support:appcompat-v7:${androidExtrasVer}"
    api "com.github.bumptech.glide:glide:3.8.0"
}

clean {
    delete '../build', 'android-phone-release.apk', 'android-tv-release.apk'
}