apply plugin: 'com.android.library'
//apply plugin: 'com.android.application'

android {
    buildToolsVersion androidBuildToolsVersion
    compileSdkVersion androidCompileSdkVersion

    android {
        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }
    compileOptions {
        //sourceCompatibility defJavaVesionConst
        //targetCompatibility defJavaVesionConst
        sourceCompatibility 1.8
        targetCompatibility 1.8

    }

    sourceSets {
        main {
            //manifest.srcFile 'AndroidManifest.xml'
            //java.srcDirs = ['src']
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            //res.srcDirs = ['res']
            //assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        //instrumentTest.setRoot('tests')
    }
    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    buildToolsVersion "${androidBuildToolsVersion}"


}

configurations {
    natives
}

dependencies {
    api project(":core")


    /*
    api "androidx.legacy:legacy-support-v4:1.0.0"
    api "androidx.appcompat:appcompat:1.0.0"
    api "androidx.cardview:cardview:1.0.0"
    api "androidx.recyclerview:recyclerview:1.0.0"
    */


    api "com.android.support:support-v4:${androidExtrasVer}"
    api "com.android.support:appcompat-v7:${androidExtrasVer}"
    api "com.android.support:cardview-v7:${androidExtrasVer}"
    api "com.android.support:recyclerview-v7:${androidExtrasVer}"


    // doesn't work in library projects :(
    // compile 'com.jakewharton:butterknife:7.0.1'

    // gdx
    api("com.badlogicgames.gdx:gdx:$gdxVersion") {
        exclude group: 'xerces'
        exclude group: 'xpp3'
    }
    api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

    // ExoPlayer
    // NOTE: because exoplayer is built using ffmpeg, it's from the stuckless/ExoPlayer repo
    api "com.google.android.exoplayer:exoplayer:${exoVersion}@aar"

    //These are working
    api "com.google.android.exoplayer:exoplayer-common:${exoVersion}@aar"
    api "com.google.android.exoplayer:exoplayer-extractor:${exoVersion}@aar"
    api "com.google.android.exoplayer:exoplayer-core:${exoVersion}@aar"
    //api "com.google.android.exoplayer:exoplayer-ui:${exoVersion}@aar"
    //api "com.google.android.exoplayer:exoplayer-dash:${exoVersion}@aar"
    //api "com.google.android.exoplayer:exoplayer-smoothstreaming:${exoVersion}@aar"
    //api "com.google.android.exoplayer:exoplayer-hls:${exoVersion}@aar"
    api "com.google.android.exoplayer:extension-ffmpeg:${exoVersionCustomExt}@aar"
    api 'com.google.guava:guava:24.1-android'

    // If you are rebuilding your own ijkplaer, then comment the lines above and
    // then uncomment these.
    api "sagetv.ijkplayer:ijkplayer-java:${ijkVersionDev}@aar"
    api "sagetv.ijkplayer:ijkplayer-armv7a:${ijkVersionDev}@aar"
    api "sagetv.ijkplayer:ijkplayer-arm64:${ijkVersionDev}@aar"
    api "sagetv.ijkplayer:ijkplayer-x86:${ijkVersionDev}@aar"
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
    api "sagetv.ijkplayer:ijkplayer-exo:${ijkVersionDev}@aar"

    // logging
    api "com.github.tony19:logback-android-core:1.1.1-6"
    api("com.github.tony19:logback-android-classic:1.1.1-6") {
        exclude group: 'com.google.android', module: 'android'
    }

    api 'com.github.rahatarmanahmed:circularprogressview:2.4.0'

    // simple event bus
    api 'com.squareup:otto:1.3.8'

    implementation 'org.jetbrains:annotations:16.0.2'

}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    file("libs/armeabi/").mkdirs();
    file("libs/armeabi-v7a/").mkdirs();
    file("libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if (jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}
